{"version":3,"sources":["app/cg.js","app/character.js","app/demo.js","app/demo2.js","app/main.js","app/ui.js","app/world.js"],"names":[],"mappings":"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","file":"public/app.js","sourcesContent":["// This is an auto-generated source file.\ndefine(['cg/audio', 'cg/entity', 'cg/game', 'cg/geometry', 'cg/input', 'cg/loader', 'cg/map', 'cg/physics', 'cg/sprite', 'cg/util'], (audio, entity, game, geometry, input, loader, map, physics, sprite, util) =>\n    ({\n        audio,\n        entity,\n        game,\n        geometry,\n        input,\n        loader,\n        map,\n        physics,\n        sprite,\n        util\n    })\n);\n","define(['./cg'],\n  function(cg) {\n    let {input, audio, util, game, geometry, entity, physics} = cg;\n\n    class Character extends entity.Entity {\n        constructor(x, y, shape, sprite) {\n            super(x, y, shape);\n            this.sprite = sprite;\n            this.sprite.startAnimation('look down');\n        }\n\n        draw(context, offx, offy) {\n            this.sprite.draw(context, this.x + offx, this.y + offy, this.facing_left);\n            return;\n        }\n    }\n\n    return class PlayerCharacter extends Character {\n        constructor(x, y, shape, sprite) {\n            super(x, y, shape, sprite);\n            this.state = 'look down';\n            this.dir = 'down';\n            let { map } = game.currentScene();\n            let player = this;\n            let ent_layer = map.getLayerByName('Entities');\n\n            this.activation_point_check = new entity.Entity(x, y + 2 * this.shape.bounds_offsets[3], new geometry.Point());\n            this.activation_point_check.collides = util.constructBitmask([0]);\n            this.activation_point_check.onCollide = function(ent, info) {\n                if (game.state === 'world' && input.jump.pressed) {\n                    if (!(ent.onActivate != null) && (ent.properties != null)) {\n                        ent.onActivate = map.tryGettingCallbackForName(ent.properties.onActivate);\n                    }\n                    ent.onActivate(ent);\n                }\n                return;\n            };\n            ent_layer.addEntity(this.activation_point_check);\n            \n            map.camera.post_update = function(dt) {\n                this.x = player.x;\n                this.y = player.y;\n                return;\n            };\n        }\n\n        update(dt) {\n            let { sprite } = this;\n            let { state } = this;\n            let switchStateTo = function(name) {\n                if (state !== name) {\n                    sprite.startAnimation(name);\n                    state = name;\n                }\n                return;\n            };\n\n            if (game.state === 'world') {\n                let vxc = 0.0;\n                let vyc = 0.0;\n\n                if (input.left.state && !input.right.state) {\n                    this.facing_left = true;\n                    vxc = -1.0;\n                    this.dir = 'right';\n                } else if (input.right.state && !input.left.state) {\n                    this.facing_left = false;\n                    vxc = 1.0;\n                    this.dir = 'right';\n                }\n\n                if (input.up.state && !input.down.state) {\n                    vyc = -1.0;\n                    this.dir = 'up';\n                } else if (input.down.state && !input.up.state) {\n                    vyc = 1.0;\n                    this.dir = 'down';\n                }\n\n                if (vyc === 0.0) {\n                    if (vxc === 0.0) {\n                        switchStateTo(`look ${this.dir}`);\n                    } else {\n                        switchStateTo('go right');\n                    }\n                } else if (vyc < 0.0) {\n                    switchStateTo('go up');\n                } else if (vyc > 0.0) {\n                    switchStateTo('go down');\n                }\n\n                this.state = state;\n                this.velocity = [64.0 * vxc, 64.0 * vyc];\n                physics.integrate(this, dt);\n\n                // TODO: make this better\n                if (this.dir === 'right') {\n                    if (this.facing_left) {\n                        this.activation_point_check.x = this.x + 2 * this.shape.bounds_offsets[0];\n                        this.activation_point_check.y = this.y;\n                    } else {\n                        this.activation_point_check.x = this.x + 2 * this.shape.bounds_offsets[1];\n                        this.activation_point_check.y = this.y;\n                    }\n                } else if (this.dir === 'up') {\n                    this.activation_point_check.x = this.x;\n                    this.activation_point_check.y = this.y + 2 * this.shape.bounds_offsets[2];\n                } else if (this.dir === 'down') {\n                    this.activation_point_check.x = this.x;\n                    this.activation_point_check.y = this.y + 2 * this.shape.bounds_offsets[3];\n                }\n            }\n\n            sprite.update(dt);\n            return;\n        }\n    };\n});\n\n","define(['./cg'],\n  function(cg) {\n    let {input, audio, util, game, geometry, entity, physics} = cg;\n    let player_sprite = null;\n    \n    return {\n        setupSky(layer) {\n            layer.draw = function(context, targx, targy) {\n                let cam = this.map.camera;\n            \n                context.beginPath();\n                cam.shapeSubpath(context, targx - cam.x, targy - cam.y);\n                context.fillStyle = '#A5DFEA';\n                context.fill();\n                return;\n            };\n            return;\n        },\n    \n        setPlayerSprite(sprite) {\n            player_sprite = sprite;\n            return;\n        },\n    \n        handlePlayerStart(obj) {\n            // actx = audio.getAudioContext()\n            // if actx?\n            //     osc = actx.createOscillator()\n            //     osc.type = osc.TRIANGLE\n            \n            //     gain = actx.createGain()\n            //     gain.gain.value = .25\n            \n            //     osc.connect gain\n            //     gain.connect actx.destination\n            \n            //     time_ptr = actx.currentTime\n            //     note_dur = .25\n            //     for tuning_factor in audio.ptolemy_tuning_factors\n            //         osc.frequency.setValueAtTime \\\n            //             1.0 * audio.ptolemy_c4 * tuning_factor,\n            //             time_ptr\n            //         time_ptr += note_dur\n            \n            //     osc.frequency.setValueAtTime \\\n            //         audio.ptolemy_c4 * .25,\n            //         time_ptr\n            \n            //     time_ptr += note_dur\n            //     osc.start actx.currentTime\n            //     osc.stop time_ptr\n        \n            let player = new entity.Entity(obj.x, obj.y,\n                new geometry.Aabb([2, 11]));\n        \n            player_sprite.startAnimation('idle');\n            player.sprite = player_sprite;\n        \n            player.obstructs = util.constructBitmask([0]);\n        \n            let walk_vel_threshold = 2;\n            let walk_accel = 640;\n            let walk_anim_speed_factor = .125;\n            let run_vel_threshold = 16;\n            let run_accel = 2560;\n            let run_anim_speed_factor = .125 / 3;\n            let grounded_damping = .25;\n            let jump_vel = -160;\n            let jump_release_factor = .5;\n            let aerial_move_accel = 32;\n            let aerial_damping = .984375;\n            let wall_slide_damping = .875;\n            let wall_jump_angle = .25 * Math.PI;\n            let wall_jump_speed = -160;\n            let gravity = 160;\n        \n            let cos_wja = Math.cos(wall_jump_angle);\n            let sin_wja = Math.sin(wall_jump_angle);\n        \n            player.update = function(dt) {\n                let v = this.velocity || [0, 0];\n                let a = [0, 0];\n            \n                let x_spd = Math.abs(this.x - (this.last_x || this.x)) / game.lastDt();\n            \n                let { sprite } = this;\n                let { state } = this;\n                let switchStateTo = function(name) {\n                    if (state !== name) {\n                        sprite.startAnimation(name);\n                        state = name;\n                    }\n                    return;\n                };\n            \n                if (input.left.state && !input.right.state) {\n                    this.facing_left = true;\n                } else if (input.right.state && !input.left.state) {\n                    this.facing_left = false;\n                }\n            \n                let moving_forward = this.facing_left &&\n                    v[0] < -walk_vel_threshold ||\n                    !this.facing_left && v[0] > walk_vel_threshold;\n\n                let running_forward = moving_forward && Math.abs(v[0]) > run_vel_threshold;\n            \n                if (input.debug.pressed) { console.log(running_forward); }\n\n                if (this.grounded) {\n                    if (!moving_forward || this.against_wall) {\n                        switchStateTo('idle');\n                    } else if (running_forward) {\n                        switchStateTo('run');\n                        sprite.animation_speed = x_spd * run_anim_speed_factor;\n                    } else {\n                        switchStateTo('walk');\n                        sprite.animation_speed = x_spd * walk_anim_speed_factor;\n                    }\n                \n                    if (input.jump.pressed) {\n                        switchStateTo('jump');\n                        v[1] = jump_vel;\n                        this.damping = aerial_damping;\n                    } else {\n                        let move_accel = input.run.state ? run_accel : walk_accel;\n                        if (input.left.state && !input.right.state) {\n                            a[0] -= move_accel * this.ground_normal[1];\n                            a[1] += move_accel * this.ground_normal[0];\n                        } else if (input.right.state && !input.left.state) {\n                            a[0] += move_accel * this.ground_normal[1];\n                            a[1] -= move_accel * this.ground_normal[0];\n                        }\n\n                        this.damping = grounded_damping;\n                    }\n                } else {\n                    if (input.left.state) {\n                        a[0] -= aerial_move_accel;\n                    }\n                    if (input.right.state) {\n                        a[0] += aerial_move_accel;\n                    }\n                    a[1] += gravity;\n                    if (v[1] < 0 && input.jump.released) {\n                        v[1] *= jump_release_factor;\n                    } else {\n                        this.damping = aerial_damping;\n                        if (this.sliding && input.jump.pressed) {\n                            if (this.wall_normal[0] > 0) {\n                                v[0] = wall_jump_speed *\n                                    geometry.dotProduct(this.wall_normal,\n                                    [cos_wja, -sin_wja]);\n                                v[1] = wall_jump_speed *\n                                    geometry.dotProduct(this.wall_normal,\n                                    [sin_wja, cos_wja]);\n                            } else if (this.wall_normal[0] < 0) {\n                                v[0] = wall_jump_speed *\n                                    geometry.dotProduct(this.wall_normal,\n                                    [cos_wja, sin_wja]);\n                                v[1] = wall_jump_speed *\n                                    geometry.dotProduct(this.wall_normal,\n                                    [-sin_wja, cos_wja]);\n                            } else {\n                                console.warn('wall jump strangeness');\n                            }\n                            switchStateTo('wall jump');\n                        } else if (this.against_wall && v[1] > 0) {\n                            this.damping = wall_slide_damping;\n                            switchStateTo('wall slide');\n                            this.facing_left = this.wall_normal[0] > 0;\n                        } else if (this.sliding) {\n                            switchStateTo('slide');\n                            this.facing_left = this.wall_normal[0] > 0;\n                        } else if (v[1] > 0) {\n                            switchStateTo('fall');\n                        }\n                    }\n                }\n            \n                if (this.grounded &&\n                  (a[0] !== 0 || v[1] < 0)) {\n                    a[1] += gravity;\n                    this.grounded = false;\n                }\n            \n                this.sliding = false;\n                this.against_wall = false;\n            \n                this.acceleration = a;\n                this.velocity = v;\n                this.last_x = this.x;\n                physics.integrate(this, dt);\n            \n                this.state = state;\n                sprite.update(dt);\n                return;\n            };\n        \n            player.onCollide = function(other, info) {\n                let [pen_amt, pen_dir] = info;\n                if (input.debug.pressed) { console.log(pen_dir); }\n                if (pen_dir[1] >= Math.abs(pen_dir[0])) {\n                    this.grounded = true;\n                    this.ground_normal = pen_dir;\n                } else if (pen_dir[1] >= 0) {\n                    this.sliding = true;\n                    this.wall_normal = pen_dir;\n                    if ((input.left.state &&\n                      pen_dir[0] < -Math.abs(pen_dir[1])) ||\n                      (input.right.state &&\n                      pen_dir[0] > Math.abs(pen_dir[1]))) {\n                        this.against_wall = true;\n                    }\n                }\n                return;\n            };\n        \n            player.draw = function(context, offx, offy) {\n                this.sprite.draw(context, this.x + offx, this.y + offy, this.facing_left);\n                return;\n            };\n        \n            obj.layer.addEntity(player);\n        \n            obj.map.camera.post_update = function(dt) {\n                this.x = player.x;\n                this.y = player.y;\n                return;\n            };\n        \n            return;\n        }\n    };\n});\n\n","define(['./cg', './ui'],\n  function(cg, ui) {\n    let {input, audio, util, game, geometry, entity, physics, map} = cg;\n\n    let fadeIn = function(duration, callback) {\n        let t_accum = 0.0;\n        let updateGenerator = function*() {\n            while (t_accum < duration) {\n                let dt = yield undefined;\n                t_accum += dt;\n            }\n            if (callback != null) { return callback(); }\n        };\n        let drawGenerator = function*() {\n            return yield* (function*() { let result = []; while (t_accum < duration) {\n                let context = yield undefined;\n                let alpha = 1.0 - (Math.min(t_accum / duration, 1.0));\n                context.fillStyle = `rgba(0,0,0,${alpha})`;\n                result.push(context.fillRect(0, 0, game.width(), game.height()));\n            } return result; }).call(this);\n        };\n\n        return util.prepareCoroutineSet(updateGenerator, drawGenerator);\n    };\n\n    class DemoScene extends map.MapScene {\n        start() {\n            super.start();\n            game.state = 'fx';\n            return game.invoke(fadeIn(0.5, () => game.state = 'world'));\n        }\n    }\n\n    class Character extends entity.Entity {\n        constructor(x, y, shape, sprite) {\n            super(x, y, shape);\n            this.sprite = sprite;\n            this.sprite.startAnimation('look down');\n        }\n\n        draw(context, offx, offy) {\n            this.sprite.draw(context, this.x + offx, this.y + offy, this.facing_left);\n            return;\n        }\n    }\n\n    class PlayerCharacter extends Character {\n        constructor(x, y, shape, sprite) {\n            super(x, y, shape, sprite);\n            this.dir = 'down';\n            this.state = `look ${this.dir}`;\n            ({ map } = game.currentScene());\n            let player = this;\n            let ent_layer = map.getLayerByName('Entities');\n\n            this.activation_point_check = new entity.Entity(x, y + 2 * this.shape.bounds_offsets[3], new geometry.Point());\n            this.activation_point_check.collides = util.constructBitmask([0]);\n            this.activation_point_check.onCollide = function(ent, info) {\n                if (game.state === 'world' && input.jump.pressed) {\n                    if (!(ent.onActivate != null) && (ent.properties != null)) {\n                        ent.onActivate = map.tryGettingCallbackForName(ent.properties.onActivate);\n                    }\n                    player.sprite.startAnimation(`look ${player.dir}`);\n                    ent.onActivate(ent);\n                }\n                return;\n            };\n            ent_layer.addEntity(this.activation_point_check);\n            \n            map.camera.post_update = function(dt) {\n                this.x = player.x;\n                this.y = player.y;\n                return;\n            };\n        }\n\n        update(dt) {\n            let { sprite } = this;\n            let { state } = this;\n            let switchStateTo = function(name) {\n                if (state !== name) {\n                    sprite.startAnimation(name);\n                    state = name;\n                }\n                return;\n            };\n\n            if (game.state === 'world') {\n                let vxc = 0.0;\n                let vyc = 0.0;\n\n                if (input.left.state && !input.right.state) {\n                    vxc = -1.0;\n                } else if (input.right.state && !input.left.state) {\n                    vxc = 1.0;\n                }\n\n                if (input.up.state && !input.down.state) {\n                    vyc = -1.0;\n                } else if (input.down.state && !input.up.state) {\n                    vyc = 1.0;\n                }\n\n                if (vxc < 0.0) {\n                    if (vyc < 0.0) {\n                        this.dir = 'up-left';\n                    } else if (vyc > 0.0) {\n                        this.dir = 'down-left';\n                    } else {\n                        this.dir = 'left';\n                    }\n                } else if (vxc > 0.0) {\n                    if (vyc < 0.0) {\n                        this.dir = 'up-right';\n                    } else if (vyc > 0.0) {\n                        this.dir = 'down-right';\n                    } else {\n                        this.dir = 'right';\n                    }\n                } else {\n                    if (vyc < 0.0) {\n                        this.dir = 'up';\n                    } else if (vyc > 0.0) {\n                        this.dir = 'down';\n                    }\n                }\n\n                if (vyc === 0.0 && vxc === 0.0) {\n                    switchStateTo(`look ${this.dir}`);\n                } else {\n                    switchStateTo(`go ${this.dir}`);\n                }\n\n                this.state = state;\n                let inv_spd_c = vxc === 0.0 && vyc === 0.0 ? 1.0 : 1.0/Math.sqrt(vxc*vxc+vyc*vyc);\n                this.velocity = [48.0 * vxc * inv_spd_c, 48.0 * vyc * inv_spd_c];\n                physics.integrate(this, dt);\n\n                if (this.dir === 'left') {\n                    this.activation_point_check.x = this.x + 2 * this.shape.bounds_offsets[0];\n                    this.activation_point_check.y = this.y;\n                } else if (this.dir === 'right') {\n                    this.activation_point_check.x = this.x + 2 * this.shape.bounds_offsets[1];\n                    this.activation_point_check.y = this.y;\n                } else if (this.dir === 'up') {\n                    this.activation_point_check.x = this.x;\n                    this.activation_point_check.y = this.y + 2 * this.shape.bounds_offsets[2];\n                } else if (this.dir === 'down') {\n                    this.activation_point_check.x = this.x;\n                    this.activation_point_check.y = this.y + 2 * this.shape.bounds_offsets[3];\n                } else if (this.dir === 'up-left') {\n                    this.activation_point_check.x = this.x + Math.sqrt(2) * this.shape.bounds_offsets[0];\n                    this.activation_point_check.y = this.y + Math.sqrt(2) * this.shape.bounds_offsets[2];\n                } else if (this.dir === 'up-right') {\n                    this.activation_point_check.x = this.x + Math.sqrt(2) * this.shape.bounds_offsets[1];\n                    this.activation_point_check.y = this.y + Math.sqrt(2) * this.shape.bounds_offsets[2];\n                } else if (this.dir === 'down-left') {\n                    this.activation_point_check.x = this.x + Math.sqrt(2) * this.shape.bounds_offsets[0];\n                    this.activation_point_check.y = this.y + Math.sqrt(2) * this.shape.bounds_offsets[3];\n                } else if (this.dir === 'down-right') {\n                    this.activation_point_check.x = this.x + Math.sqrt(2) * this.shape.bounds_offsets[1];\n                    this.activation_point_check.y = this.y + Math.sqrt(2) * this.shape.bounds_offsets[3];\n                }\n            }\n\n            sprite.update(dt);\n            return;\n        }\n    }\n\n    let player = null;\n    let player_shape = null;\n    let player_sprite = null;\n\n    return {\n        setPlayerMetadata(shape, sprite) {\n            player_shape = shape;\n            player_sprite = sprite;\n            return;\n        },\n\n        handlePlayerStart(obj) {\n            player = new PlayerCharacter(obj.x, obj.y, player_shape, player_sprite, obj.map.camera);\n            player.obstructs = util.constructBitmask([0]);\n            obj.layer.addEntity(player);\n            return;\n        },\n\n        handleChest1Start(obj) {\n            return;\n        },\n\n        tryOpeningChest1(obj) {\n            let tx = (obj.x / obj.map.tilewidth) | 0;\n            let ty = (obj.y / obj.map.tileheight) | 0;\n            let layer = obj.map.getLayerByName('Ground');\n            let td = layer.data[tx][ty].slice();\n            td[0]++;\n            layer.setTile(tx, ty, td);\n            ui.textBoxDialog('Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 0, 0, 160, 44, 10.0, null, null, () => game.state = 'world');\n            return;\n        },\n\n        DemoScene\n    };\n});\n","// Configure RequireJS to load jQuery from a common URL.\nrequirejs.config( {\n    paths: {\n        jquery: 'https://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min',\n        screenfull: '../libs/screenfull'\n    }\n});\n\nrequire(['jquery', 'screenfull', './cg', './demo', './demo2', './ui',\n'./zonko_desert'],\n  function($, __void__, cg, demo, demo2, ui,\n  zonko_desert) {\n    let {game, loader, map} = cg;\n\n    let setupScreenfull = function(game) {\n        if ((typeof screenfull !== 'undefined' && screenfull !== null) && screenfull.enabled) {\n            let fs_btn_container = (document.getElementById('fs-btn')) || document.body;\n            let fs_button = $('<button/>').text('Fullscreen').click(function() {\n                let game_canvas = game.canvas();\n                screenfull.request(game_canvas);\n                $(game_canvas).focus();\n                return;\n            });\n            return fs_btn_container.appendChild(fs_button[0]);\n        }\n    };\n\n    $(function() {\n        // Force jQuery to grab fresh data in its Ajax requests.\n        $.ajaxSetup({cache: false});\n        \n        // This is where the game code starts.\n        let loader_scene = new loader.LoaderScene({\n                maps: {\n                    demo: { name: 'demo', script: demo },\n                    demo2: { name: 'demo2', script: demo2 },\n                    zonko_desert: { name: 'zonko_desert', script: zonko_desert}\n                },\n                sprites: {\n                    player: 'player',\n                    demo2player: 'demo2player',\n                    joanna: 'joanna',\n                    shaun: 'shaun',\n                    javelina: 'javelina'\n                },\n                sounds: {}\n            }, function(loaded) {\n                demo.setPlayerSprite(loaded.sprites.player);\n                let demo_scene = new map.MapScene(loaded.maps.demo);\n\n                demo2.setPlayerMetadata(new cg.geometry.Aabb([4, 4]), loaded.sprites.joanna);\n                let demo_scene2 = new demo2.DemoScene(loaded.maps.demo2);\n\n                zonko_desert = new demo2.DemoScene(loaded.maps.zonko_desert);\n\n                game.switchScene(zonko_desert);\n                return;\n            });\n\n        game.init(320, 240, 1 / 60, 1 / 20, loader_scene);\n        setupScreenfull(game);\n        $(window).resize(game.resizeCanvasToAspectRatio);\n        $(game.canvas()).attr('dir', ui.isRightToLeft() ? 'rtl' : 'ltr');\n        game.run();\n        return;\n    });\n    return;\n});\n\n","define(['./cg'],\n  function(cg) {\n    let {input, audio, util, game, geometry, entity, physics} = cg;\n\n    let right_to_left = false;\n\n    let default_style = {\n        fontSize: 10,\n        font: 'sans-serif',\n        lineStyles: 'white black 1.0 round round',\n        fillStyle: 'rgb(26,47,158)'\n    };\n\n    let wordWrapText = function(text, width, style, context) {\n        let wordWrapLine = function(line) {\n            let word_delimeter = ' ';\n            let words = line.split(word_delimeter);\n            let lines = [];\n            let current_line = '';\n            for (let i = 0; i < words.length; i++) {\n                let word = words[i];\n                let current_line_candidate = i === 0 ? word : current_line + word_delimeter + word;\n                if ((context.measureText(current_line_candidate)).width > width) {\n                    lines.push(current_line);\n                    current_line = word;\n                } else {\n                    current_line = current_line_candidate;\n                }\n            }\n            if (current_line !== '') { lines.push(current_line); }\n            return lines;\n        };\n        let line_delimeter = '\\n';\n        style = style || default_style;\n        context = context || game.canvas().getContext('2d');\n        context.save();\n        context.font = style.fontSize + 'px ' + style.font;\n        let lines = [].concat(...(text.split(line_delimeter)).map(wordWrapLine));\n        context.restore();\n        return lines;\n    };\n\n    let drawTextBox = function(x, y, width, height, lines_scrolled, text_obj, style, context) {\n        style = style || default_style;\n        context = context || game.canvas().getContext('2d');\n\n        context.save();\n\n        context.font = style.font;\n        context.textBaseline = \"top\";\n\n        let styleDescriptors = style.lineStyles.split(' ');\n        let mainLineStrokeStyle = styleDescriptors[0];\n        context.strokeStyle = styleDescriptors[1];\n        context.lineWidth = styleDescriptors[2];\n        context.lineCap = styleDescriptors[3];\n        context.lineJoin = styleDescriptors[4];\n        context.fillStyle = style.fillStyle;\n\n        context.fillRect(x + 1.0, y + 1.0, width - 2.0, height - 2.0);\n        context.strokeRect(x + 1.5, y + 1.5, width - 2.0, height - 2.0);\n        context.strokeStyle = mainLineStrokeStyle;\n        context.strokeRect(x + 0.5, y + 0.5, width - 2.0, height - 2.0);\n\n        context.beginPath();\n        context.rect(x + 2.0, y + 2.0, width - 4.0, height - 4.0);\n        context.clip();\n        context.fillStyle = mainLineStrokeStyle;\n        context.textAlign = 'start';\n        for (let i = 0; i < text_obj.lines.length; i++) {\n            let line = text_obj.lines[i];\n            if (right_to_left) {\n                context.fillText(line, x + width - 3.0, y + 3.0 + (i-lines_scrolled)*text_obj.spacing);\n            } else {\n                context.fillText(line, x + 3.0, y + 3.0 + (i-lines_scrolled)*text_obj.spacing);\n            }\n        }\n\n        context.restore();\n        return;\n    };\n\n    return {\n        isRightToLeft() { return right_to_left; },\n\n        textBoxDialog(text, x, y, width, height, speed, style, context, callback) {\n            game.state = 'dialog';\n            style = style || default_style;\n            context = context || game.canvas().getContext('2d');\n            let line_progress = 0.0;\n            let lines_scrolled = 0.0;\n            let num_lines_per_screen = ((height - 6.0) / style.fontSize) | 0;\n            let cur_line_idx = 0;\n            let cur_line = '';\n            let word_wrapped_text = wordWrapText(text, width-6, style, context);\n            let displayed_text = [];\n            let done = false;\n            let updateGenerator = function*() {\n                while (cur_line_idx < word_wrapped_text.length) {\n                    var dt = yield undefined;\n                    let delta = dt * speed * (input.jump.state ? 3.0 : 1.0);\n                    if (lines_scrolled >= cur_line_idx - num_lines_per_screen + 1) {\n                        var new_line_progress = line_progress + delta;\n                    } else {\n                        lines_scrolled = Math.min(cur_line_idx - num_lines_per_screen + 1, lines_scrolled + delta);\n                    }\n                    if (new_line_progress | 0 > line_progress | 0) {\n                        if (new_line_progress >= word_wrapped_text[cur_line_idx].length) {\n                            cur_line_idx++;\n                            cur_line = '';\n                            line_progress = 0.0;\n                            var new_line_progress = 0.0;\n                            displayed_text = word_wrapped_text.slice(0, cur_line_idx);\n                        } else {\n                            cur_line = word_wrapped_text[cur_line_idx].slice(0, (new_line_progress | 0)).trim();\n                        }\n\n                        displayed_text[cur_line_idx] = cur_line;\n                    }\n                    line_progress = new_line_progress;\n                }\n                    // if input.debug.pressed\n                    //     console.log {\n                    //         num_lines_per_screen: num_lines_per_screen\n                    //         line_progress: line_progress\n                    //         lines_scrolled: lines_scrolled\n                    //         cur_line_idx: cur_line_idx\n                    //         cur_line: cur_line\n                    //         word_wrapped_text: word_wrapped_text\n                    //         displayed_text: displayed_text\n                    //     }\n                displayed_text = word_wrapped_text;\n                while (!input.jump.pressed) { var dt = yield undefined; }\n                done = true;\n                if (callback != null) { return callback(); }\n            };\n            let drawGenerator = function*() {\n                return yield* (function*() { let result = []; while (!done) {\n                    context = yield undefined;\n                    result.push(drawTextBox(x, y, width, height, lines_scrolled, {\n                            spacing: style.fontSize,\n                            lines: displayed_text\n                        }, style, context));\n                } return result; }).call(this);\n            };\n\n            return game.invoke(util.prepareCoroutineSet(updateGenerator, drawGenerator));\n        }\n    };\n});\n","define(['./cg'],\n  function(cg) {\n    let {input, audio, util, game, geometry, entity, physics, map} = cg;\n\n    \n\n    return class WorldScene extends map.MapScene {};\n  });\n"]}