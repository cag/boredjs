{"version":3,"sources":["../../bin/cli.js"],"names":[],"mappings":"AAEA;;;;AAEA,IAAM,WAAW,QAAQ,UAAR,CAAX;AACN,IAAM,IAAI,QAAQ,QAAR,CAAJ;AACN,IAAM,oBAAoB,QAAQ,2BAAR,CAApB;;AAEN,IAAM,OAAO,SAAS,QAAQ,IAAR,CAAa,KAAb,CAAmB,CAAnB,CAAT,CAAP;;;AAGN,KAAK,IAAM,GAAN,IAAa,IAAlB,EAAwB;AACpB,QAAM,QAAQ,KAAK,GAAL,CAAR,CADc;AAEpB,WAAO,KAAK,GAAL,CAAP,CAFoB;AAGpB,SAAK,EAAE,SAAF,CAAY,GAAZ,CAAL,IAAyB,KAAzB,CAHoB,CAAxB;;;;WAOqB,CAAC,WAAD,EAAc,mBAAd,EAArB,yCAAyD,CAApD,IAAM,iBAAN,CAAoD;AACrD,QAAI,UAAU,IAAV,EAAgB;AAChB,YAAI,CAAC,MAAM,OAAN,CAAc,KAAK,MAAL,CAAd,CAAD,EAA8B;AAC9B,iBAAK,MAAL,IAAe,CAAC,KAAK,MAAL,CAAD,CAAf,CAD8B,CAAlC,CADJ,CADJ;;;;;;AASA,IAAM,UAAU,KAAK,OAAL;AAChB,OAAO,KAAK,OAAL;;AAEP,IAAM,MAAM;AACR,gCAAS,QAAQ;AACb,YAAI,OAAJ,EAAa;AACT,qCAAkB,OAAO,GAAP,0BAAlB,oGAA8B,KAAnB,kBAAmB;AAC1B,4BAAQ,GAAR,CAAY,GAAZ,EAD0B,CAA9B,iNADS,CAAb,sCADa;;;;AAOb,kCAAkB,OAAO,KAAP,2BAAlB,wGAAgC,KAArB,mBAAqB;AAC5B,wBAAQ,KAAR,CAAc,GAAd,EAD4B,CAAhC,wNAPa;;;AAWb,YAAI,OAAO,MAAP,KAAkB,CAAlB,EAAqB;AACrB,oBAAQ,IAAR,CAAa,OAAO,MAAP,CAAb,CADqB,CAAzB,CAZI,EAAN;;;;;AAkBN,kBAAkB,IAAlB,EAAwB,IAAI,QAAJ,CAAxB;;AAEA,OAAO,OAAP,GAAiB,GAAjB","file":"cli.js","sourcesContent":["\n\n'use strict';\n\nconst minimist = require('minimist');\nconst _ = require('lodash');\nconst checkDependencies = require('../lib/check-dependencies');\n\nconst argv = minimist(process.argv.slice(2));\n\n// camelCase the options\nfor (const key in argv) {\n    const value = argv[key];\n    delete argv[key];\n    argv[_.camelCase(key)] = value;\n}\n\n// Options of type array should always have array values\nfor (const option of ['scopeList', 'optionalScopeList']) {\n    if (option in argv) {\n        if (!Array.isArray(argv[option])) {\n            argv[option] = [argv[option]];\n        }\n    }\n}\n\n// We'll handle verbosity by the CLI here.\nconst verbose = argv.verbose;\ndelete argv.verbose;\n\nconst Cli = {\n    reporter(result) {\n        if (verbose) {\n            for (const msg of result.log) {\n                console.log(msg);\n            }\n        }\n\n        for (const msg of result.error) {\n            console.error(msg);\n        }\n\n        if (result.status !== 0) {\n            process.exit(result.status);\n        }\n    },\n};\n\ncheckDependencies(argv, Cli.reporter);\n\nmodule.exports = Cli;\n"]}